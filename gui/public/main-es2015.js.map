{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/chat/chatbody/chatbody.component.ts","./src/app/components/chat/chatbody/chatbody.component.html","./src/app/components/chat/chatgui/chatgui.component.ts","./src/app/components/chat/chatgui/chatgui.component.html","./src/app/components/chat/chatheader/chatheader.component.ts","./src/app/components/chat/chatheader/chatheader.component.html","./src/app/components/chat/chatinput/chatinput.component.ts","./src/app/components/chat/chatinput/chatinput.component.html","./src/app/components/chat/chatlist/chatlist.component.ts","./src/app/components/chat/chatlist/chatlist.component.html","./src/app/components/chat/chatmembers/chatmembers.component.ts","./src/app/components/chat/chatmembers/chatmembers.component.html","./src/app/components/chat/chatmessage/chatmessage.component.ts","./src/app/components/chat/chatmessage/chatmessage.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/services/authentication.service.ts","./src/app/services/chat.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChatguiComponent } from './components/chat/chatgui/chatgui.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/login\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  },\n  {\n    path: \"chat\",\n    component: ChatguiComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chatapp';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChatguiComponent } from './components/chat/chatgui/chatgui.component';\nimport { ChatlistComponent } from './components/chat/chatlist/chatlist.component';\nimport { ChatbodyComponent } from './components/chat/chatbody/chatbody.component';\nimport { ChatinputComponent } from './components/chat/chatinput/chatinput.component';\nimport { ChatmessageComponent } from './components/chat/chatmessage/chatmessage.component';\nimport { ChatheaderComponent } from './components/chat/chatheader/chatheader.component';\nimport { ChatmembersComponent } from './components/chat/chatmembers/chatmembers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ChatguiComponent,\n    ChatlistComponent,\n    ChatbodyComponent,\n    ChatinputComponent,\n    ChatmessageComponent,\n    ChatheaderComponent,\n    ChatmembersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatbody',\n  templateUrl: './chatbody.component.html',\n  styleUrls: ['./chatbody.component.css']\n})\nexport class ChatbodyComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"chatbody\">\n  <app-chatmessage *ngFor=\"let message of chatService.messages\" [message]=\"message\"></app-chatmessage>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatgui',\n  templateUrl: './chatgui.component.html',\n  styleUrls: ['./chatgui.component.css']\n})\nexport class ChatguiComponent implements OnInit {\n\n  constructor(public chatService:ChatService) { }\n\n  ngOnInit(): void {\n    this.chatService.setupSocket();\n    this.chatService.authenticate();\n  }\n\n}\n","<div>\n  <div class=\"chat\">\n    <app-chatheader [chatService]=\"chatService\"></app-chatheader>\n    <app-chatbody [chatService]=\"chatService\"></app-chatbody>\n    <app-chatinput [chatService]=\"chatService\"></app-chatinput>\n  </div>\n  <app-chatlist [chatService]=\"chatService\"></app-chatlist>\n  <app-chatmembers [chatService]=\"chatService\"></app-chatmembers>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatheader',\n  templateUrl: './chatheader.component.html',\n  styleUrls: ['./chatheader.component.css']\n})\nexport class ChatheaderComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  showError: boolean;\n  errorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.showError = false;\n    this.errorMessage = \"\";\n    this.chatService.errors.subscribe((error) => {\n      this.showError = true;\n      this.errorMessage = error;\n      setTimeout(() => {\n        this.showError = false;\n      }, 10000);\n    });\n  }\n\n  setClasses() {\n    return {\n      header: true,\n      hidden: !this.chatService.isInChat() && !this.showError,\n      error: this.showError\n    };\n  }\n\n  showMembers() {\n    this.chatService.refreshChats();\n    this.chatService.showMembers = !this.chatService.showMembers;\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"errors\">{{ errorMessage }}</div>\n  <div class=\"items\">\n    <button (click)=\"chatService.leaveChat()\">Leave</button>\n    <h1>{{ chatService.chatName }}</h1>\n    <button (click)=\"showMembers()\">Members</button>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatinput',\n  templateUrl: './chatinput.component.html',\n  styleUrls: ['./chatinput.component.css']\n})\nexport class ChatinputComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  message = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage(this.message);\n    this.message = \"\";\n  }\n\n  messageKeyDown(event) {\n    if(event.keyCode === 13) {\n      this.sendMessage();\n    }\n  }\n\n}\n","<div class=\"chatinput\">\n  <input [(ngModel)]=\"message\" (keydown)=\"messageKeyDown($event)\" type=\"text\" placeholder=\"Message\">\n  <button (click)=\"sendMessage()\">Send</button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { Chat } from 'src/app/models/chat';\n\n@Component({\n  selector: 'app-chatlist',\n  templateUrl: './chatlist.component.html',\n  styleUrls: ['./chatlist.component.css']\n})\nexport class ChatlistComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  chatname:string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    this.chatname = \"\";\n    this.chatService.refreshChats();\n  }\n\n  setClasses() {\n    return {\n      chatlist: true,\n      hidden: this.chatService.isInChat()\n    };\n  }\n\n  joinChat(id) {\n    this.chatService.joinChat(id)\n  }\n\n  createChat() {\n    this.chatService.createChat(this.chatname);\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">\n    <input [(ngModel)]=\"chatname\" type=\"text\">\n    <button (click)=\"createChat()\">Create new chat</button>\n  </div>\n  <div class=\"body\">\n    <div *ngFor=\"let chat of chatService.chats\">\n      <div class=\"chat\" (click)=\"joinChat(chat.id)\">\n        {{ chat.name }}\n      </div>\n    </div>\n    <div class=\"buttons\">\n      <button (click)=\"chatService.refreshChats()\">Refresh</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatmembers',\n  templateUrl: './chatmembers.component.html',\n  styleUrls: ['./chatmembers.component.css']\n})\nexport class ChatmembersComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setClasses() {\n    return {\n      chatmembers: true,\n      hidden: !this.chatService.showMembers\n    };\n  }\n\n  closeMembers() {\n    this.chatService.showMembers = !this.chatService.showMembers;\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">\n    <h1>Members</h1>\n    <button (click)=\"closeMembers()\">Close</button>\n  </div>\n  <div class=\"body\">\n    <div *ngFor=\"let member of chatService.members\">\n      <div class=\"member\">\n        {{ member.name }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/models/message';\n\n@Component({\n  selector: 'app-chatmessage',\n  templateUrl: './chatmessage.component.html',\n  styleUrls: ['./chatmessage.component.css']\n})\nexport class ChatmessageComponent implements OnInit {\n\n  @Input() message:Message;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setClasses() {\n    return {\n      message: true,\n      mymessage: this.message.senderIsMe,\n      special: this.message.senderIsMe || this.message.userid == -1\n    };\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">{{ message.username }}</div>\n  <div class=\"body\">{{ message.message }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = {\n    email: '',\n    password: ''\n  };\n\n  statusMessage;\n\n  _errorSubscription;\n\n  constructor(private auth:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this._errorSubscription = this.auth.errors.subscribe((data) => {\n      this.statusMessage = data;\n    });\n    this.statusMessage = \"\";\n  }\n\n  ngOnDestroy() {\n     this._errorSubscription.unsubscribe();\n   }\n\n  onFormSubmit(event, data) {\n    event.preventDefault();\n    this.auth.login(data);\n  }\n\n  changeFormValue(event) {\n    this.loginForm[event.target.name] = event.target.value;\n  }\n\n  statusMessageClasses() {\n    return {\n      \"status-message\": true,\n      \"text-danger\": true,\n      \"hidden\": this.statusMessage == \"\"\n    };\n  }\n\n}\n","<main>\n  <form>\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"email\" placeholder=\"E-mail\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\">\n    </div>\n\n    <div class=\"input-group input-group-lg form-center\">\n      <button (click)=\"onFormSubmit($event, loginForm)\" class=\"btn btn-lg btn-secondary\">Login</button>\n    </div>\n\n    <div [ngClass]=\"statusMessageClasses()\">\n      {{ statusMessage }}\n    </div>\n\n    <div class=\"form-center\">\n      <a href=\"register\">Or register</a>\n    </div>\n  </form>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loginForm = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    passwordRepeat: ''\n  };\n\n  statusMessage;\n\n  _errorSubscription;\n\n  constructor(private auth:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this._errorSubscription = this.auth.errors.subscribe((data) => {\n      this.statusMessage = data;\n    });\n    this.statusMessage = \"\";\n  }\n\n  ngOnDestroy() {\n     this._errorSubscription.unsubscribe();\n   }\n\n  onFormSubmit(event, data) {\n    event.preventDefault();\n    if(data.passwordRepeat == data.password) {\n      this.auth.register(data);\n    } else {\n      this.statusMessage = \"Passwords don't match!\";\n    }\n  }\n\n  changeFormValue(event) {\n    this.loginForm[event.target.name] = event.target.value;\n  }\n\n  statusMessageClasses() {\n    return {\n      \"status-message\": true,\n      \"text-danger\": true,\n      \"hidden\": this.statusMessage == \"\"\n    };\n  }\n\n}\n","<main>\n  <form>\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"firstname\" placeholder=\"Firstname\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"lastname\" placeholder=\"Lastname\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"email\" placeholder=\"E-mail\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"passwordRepeat\" placeholder=\"Repeat password\">\n    </div>\n\n    <div class=\"input-group input-group-lg form-center\">\n      <button (click)=\"onFormSubmit($event, loginForm)\" class=\"btn btn-lg btn-secondary\">Register</button>\n    </div>\n\n    <div [ngClass]=\"statusMessageClasses()\">\n      {{ statusMessage }}\n    </div>\n\n    <div class=\"form-center\">\n      <a href=\"login\">Or login</a>\n    </div>\n  </form>\n</main>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  token:string;\n\n  baseUrl:string = \"https://noahk.ddns.net/Websites/chatapp/api/\";\n\n  errors: Subject<string> = new Subject<string>();\n\n  constructor(private http:HttpClient, private router:Router) { }\n\n  login(data) {\n    this.http.post(this.baseUrl + \"login.php\", data).subscribe((response:any) => {\n      if(response.status !== \"success\") {\n        this.errors.next(response.message);\n      } else {\n        sessionStorage.setItem('userToken', response.token);\n        sessionStorage.setItem('websocketUrl', response.websocket);\n        this.router.navigate(['chat']);\n      }\n    });\n  }\n\n  register(data) {\n    this.http.post(this.baseUrl + \"register.php\", data).subscribe((response:any) => {\n      if(response.status !== \"success\") {\n        this.errors.next(response.message);\n      } else {\n        this.login({\n          email: data.email,\n          password: data.password\n        });\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\nimport { Message } from '../models/message';\nimport { Chat } from '../models/chat';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  socket:WebSocketSubject<any>;\n  callbacks:Map<number, (data) => void> = new Map<number, (data) => void>();\n  messages: Message[];\n  chats: Chat[];\n  members: any[];\n  showMembers: boolean;\n  selectedChat: number;\n  chatName: string;\n  errors: Subject<string> = new Subject<string>();\n\n  constructor(private router:Router) {\n    if(sessionStorage.getItem(\"userToken\") === null || sessionStorage.getItem(\"websocketUrl\") === null) {\n      this.router.navigate(['login']);\n    }\n    this.messages = [];\n    this.chats = [];\n    this.members = [];\n    this.showMembers = false;\n    this.selectedChat = -1;\n    this.chatName = \"\";\n  }\n\n  setupSocket() {\n    this.socket = webSocket(sessionStorage.getItem(\"websocketUrl\"));\n    this.socket.subscribe({\n      next: (msg) => {\n        switch(msg.type) {\n          case 'response':\n            // Responses may have callbacks.\n            if(msg.hasOwnProperty('identifier') && this.callbacks.has(msg.identifier)) {\n              this.callbacks.get(msg.identifier)(msg);\n              this.callbacks.delete(msg.identifier);\n            }\n            break;\n          case 'message':\n            if(msg.chat == this.selectedChat) {\n              this.messages.push(msg);\n              console.log(msg);\n            }\n            break;\n          default:\n            break;\n        }\n        console.log(msg);\n      },\n      error: (err) => {\n        this.router.navigate(['login']);\n      },\n      complete: () => {\n        this.errors.next(\"Disconnected!\");\n        console.log(\"Connection closed!\");\n      }\n    });\n  }\n\n  authenticate() {\n    if(sessionStorage.getItem(\"userToken\") === null || sessionStorage.getItem(\"websocketUrl\") === null) {\n      this.router.navigate(['login']);\n    }\n    this.socket.next({\n      type: \"authenticate\",\n      token: sessionStorage.getItem(\"userToken\")\n    });\n    sessionStorage.setItem(\"userToken\", null);\n  }\n\n  sendJson(obj, callback: (data) => void):void {\n    let callbackid = Math.floor(Math.random() * 1000000);\n    while(this.callbacks.has(callbackid)) {\n      callbackid = Math.floor(Math.random() * 1000000);\n    }\n    this.callbacks.set(callbackid, callback);\n    obj.identifier = callbackid;\n    \n    this.socket.next(obj);\n  }\n\n  leaveChat() {\n    this.sendJson({\n      type: \"leaveChat\",\n      chatid: this.selectedChat\n    }, (data) => {\n      if(data.status == \"error\") {\n        this.onError(data);\n      }\n    });\n    this.selectedChat = -1;\n    this.chatName = \"\";\n    this.refreshChats();\n    this.showMembers = false;\n    this.messages = [];\n  }\n\n  joinChat(chatid) {\n    this.selectedChat = chatid;\n    this.chatName = this.chats[chatid].name;\n    this.sendJson({\n      type: \"joinChat\",\n      chatid: this.selectedChat\n    }, (data) => {\n      if(data.status == \"error\") {\n        this.onError(data);\n      }\n    });\n    this.refreshChats();\n  }\n\n  sendMessage(msg:string) {\n    if(msg != \"\" && this.selectedChat != -1) {\n      this.sendJson({\n        type: \"sendMessage\",\n        chatid: this.selectedChat,\n        message: msg\n      }, (data) => {\n        if(data.status == \"error\") {\n          this.onError(data);\n        }\n      });\n    }\n  }\n\n  refreshChats(callback: () => void = () => {}):void {\n    this.sendJson({\n      type: \"getChats\",\n      name: name\n    }, (data) => {\n      if(data.status == \"success\") {\n        this.chats = data.chats;\n        callback();\n        if(this.selectedChat != -1) {\n          this.members = this.chats[this.selectedChat].users;\n        }\n        console.log(this.members);\n      } else {\n        this.onError(data);\n      }\n    });\n  }\n\n  createChat(name:string) {\n    this.sendJson({\n      type: \"createChat\",\n      name: name\n    }, (data) => {\n      if(data.status == \"success\") {\n        this.selectedChat = data.chatid;\n        this.refreshChats(() => {\n          this.chatName = this.chats[data.chatid].name;\n        });\n      } else {\n        this.onError(data);\n      }\n    });\n  }\n\n  onError(data) {\n    if(data.error == \"Unauthenticated!\") {\n      this.router.navigate(['login']);\n    }\n    this.errors.next(data.error);\n    console.log(data);\n  }\n\n  isInChat():boolean {\n    return this.selectedChat != -1;\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}