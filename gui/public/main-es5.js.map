{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat/chatbody/chatbody.component.ts","webpack:///src/app/components/chat/chatbody/chatbody.component.html","webpack:///src/app/components/chat/chatgui/chatgui.component.ts","webpack:///src/app/components/chat/chatgui/chatgui.component.html","webpack:///src/app/components/chat/chatheader/chatheader.component.ts","webpack:///src/app/components/chat/chatheader/chatheader.component.html","webpack:///src/app/components/chat/chatinput/chatinput.component.ts","webpack:///src/app/components/chat/chatinput/chatinput.component.html","webpack:///src/app/components/chat/chatlist/chatlist.component.ts","webpack:///src/app/components/chat/chatlist/chatlist.component.html","webpack:///src/app/components/chat/chatmembers/chatmembers.component.ts","webpack:///src/app/components/chat/chatmembers/chatmembers.component.html","webpack:///src/app/components/chat/chatmessage/chatmessage.component.ts","webpack:///src/app/components/chat/chatmessage/chatmessage.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatbodyComponent","ChatguiComponent","chatService","setupSocket","authenticate","ChatheaderComponent","showError","errorMessage","errors","subscribe","error","setTimeout","header","hidden","isInChat","refreshChats","showMembers","ChatinputComponent","message","sendMessage","event","keyCode","messageKeyDown","ChatlistComponent","chatname","chatlist","joinChat","createChat","ChatmembersComponent","chatmembers","closeMembers","ChatmessageComponent","mymessage","senderIsMe","LoginComponent","auth","loginForm","email","password","_errorSubscription","data","statusMessage","unsubscribe","preventDefault","login","target","name","value","changeFormValue","onFormSubmit","RegisterComponent","username","firstname","lastname","passwordRepeat","register","AuthenticationService","http","router","baseUrl","post","response","status","next","sessionStorage","setItem","token","websocket","navigate","providedIn","ChatService","callbacks","Map","getItem","messages","chats","members","selectedChat","chatName","socket","msg","type","hasOwnProperty","has","identifier","get","chat","push","console","log","err","complete","obj","callback","callbackid","Math","floor","random","set","sendJson","chatid","onError","users","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChatguiComponent } from './components/chat/chatgui/chatgui.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"/login\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  },\n  {\n    path: \"chat\",\n    component: ChatguiComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chatapp';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChatguiComponent } from './components/chat/chatgui/chatgui.component';\nimport { ChatlistComponent } from './components/chat/chatlist/chatlist.component';\nimport { ChatbodyComponent } from './components/chat/chatbody/chatbody.component';\nimport { ChatinputComponent } from './components/chat/chatinput/chatinput.component';\nimport { ChatmessageComponent } from './components/chat/chatmessage/chatmessage.component';\nimport { ChatheaderComponent } from './components/chat/chatheader/chatheader.component';\nimport { ChatmembersComponent } from './components/chat/chatmembers/chatmembers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ChatguiComponent,\n    ChatlistComponent,\n    ChatbodyComponent,\n    ChatinputComponent,\n    ChatmessageComponent,\n    ChatheaderComponent,\n    ChatmembersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatbody',\n  templateUrl: './chatbody.component.html',\n  styleUrls: ['./chatbody.component.css']\n})\nexport class ChatbodyComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"chatbody\">\n  <app-chatmessage *ngFor=\"let message of chatService.messages\" [message]=\"message\"></app-chatmessage>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatgui',\n  templateUrl: './chatgui.component.html',\n  styleUrls: ['./chatgui.component.css']\n})\nexport class ChatguiComponent implements OnInit {\n\n  constructor(public chatService:ChatService) { }\n\n  ngOnInit(): void {\n    this.chatService.setupSocket();\n    this.chatService.authenticate();\n  }\n\n}\n","<div>\n  <div class=\"chat\">\n    <app-chatheader [chatService]=\"chatService\"></app-chatheader>\n    <app-chatbody [chatService]=\"chatService\"></app-chatbody>\n    <app-chatinput [chatService]=\"chatService\"></app-chatinput>\n  </div>\n  <app-chatlist [chatService]=\"chatService\"></app-chatlist>\n  <app-chatmembers [chatService]=\"chatService\"></app-chatmembers>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatheader',\n  templateUrl: './chatheader.component.html',\n  styleUrls: ['./chatheader.component.css']\n})\nexport class ChatheaderComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  showError: boolean;\n  errorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.showError = false;\n    this.errorMessage = \"\";\n    this.chatService.errors.subscribe((error) => {\n      this.showError = true;\n      this.errorMessage = error;\n      setTimeout(() => {\n        this.showError = false;\n      }, 10000);\n    });\n  }\n\n  setClasses() {\n    return {\n      header: true,\n      hidden: !this.chatService.isInChat() && !this.showError,\n      error: this.showError\n    };\n  }\n\n  showMembers() {\n    this.chatService.refreshChats();\n    this.chatService.showMembers = !this.chatService.showMembers;\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"errors\">{{ errorMessage }}</div>\n  <div class=\"items\">\n    <button (click)=\"chatService.leaveChat()\">Leave</button>\n    <h1>{{ chatService.chatName }}</h1>\n    <button (click)=\"showMembers()\">Members</button>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatinput',\n  templateUrl: './chatinput.component.html',\n  styleUrls: ['./chatinput.component.css']\n})\nexport class ChatinputComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  message = '';\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage(this.message);\n    this.message = \"\";\n  }\n\n  messageKeyDown(event) {\n    if(event.keyCode === 13) {\n      this.sendMessage();\n    }\n  }\n\n}\n","<div class=\"chatinput\">\n  <input [(ngModel)]=\"message\" (keydown)=\"messageKeyDown($event)\" type=\"text\" placeholder=\"Message\">\n  <button (click)=\"sendMessage()\">Send</button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { Chat } from 'src/app/models/chat';\n\n@Component({\n  selector: 'app-chatlist',\n  templateUrl: './chatlist.component.html',\n  styleUrls: ['./chatlist.component.css']\n})\nexport class ChatlistComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n\n  chatname:string;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    this.chatname = \"\";\n    this.chatService.refreshChats();\n  }\n\n  setClasses() {\n    return {\n      chatlist: true,\n      hidden: this.chatService.isInChat()\n    };\n  }\n\n  joinChat(id) {\n    this.chatService.joinChat(id)\n  }\n\n  createChat() {\n    this.chatService.createChat(this.chatname);\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">\n    <input [(ngModel)]=\"chatname\" type=\"text\">\n    <button (click)=\"createChat()\">Create new chat</button>\n  </div>\n  <div class=\"body\">\n    <div *ngFor=\"let chat of chatService.chats\">\n      <div class=\"chat\" (click)=\"joinChat(chat.id)\">\n        {{ chat.name }}\n      </div>\n    </div>\n    <div class=\"buttons\">\n      <button (click)=\"chatService.refreshChats()\">Refresh</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n  selector: 'app-chatmembers',\n  templateUrl: './chatmembers.component.html',\n  styleUrls: ['./chatmembers.component.css']\n})\nexport class ChatmembersComponent implements OnInit {\n\n  @Input() chatService:ChatService;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setClasses() {\n    return {\n      chatmembers: true,\n      hidden: !this.chatService.showMembers\n    };\n  }\n\n  closeMembers() {\n    this.chatService.showMembers = !this.chatService.showMembers;\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">\n    <h1>Members</h1>\n    <button (click)=\"closeMembers()\">Close</button>\n  </div>\n  <div class=\"body\">\n    <div *ngFor=\"let member of chatService.members\">\n      <div class=\"member\">\n        {{ member.name }}\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/models/message';\n\n@Component({\n  selector: 'app-chatmessage',\n  templateUrl: './chatmessage.component.html',\n  styleUrls: ['./chatmessage.component.css']\n})\nexport class ChatmessageComponent implements OnInit {\n\n  @Input() message:Message;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setClasses() {\n    return {\n      message: true,\n      mymessage: this.message.senderIsMe\n    };\n  }\n\n}\n","<div [ngClass]=\"setClasses()\">\n  <div class=\"header\">{{ message.username }}</div>\n  <div class=\"body\">{{ message.message }}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm = {\n    email: '',\n    password: ''\n  };\n\n  statusMessage;\n\n  _errorSubscription;\n\n  constructor(private auth:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this._errorSubscription = this.auth.errors.subscribe((data) => {\n      this.statusMessage = data;\n    });\n    this.statusMessage = \"\";\n  }\n\n  ngOnDestroy() {\n     this._errorSubscription.unsubscribe();\n   }\n\n  onFormSubmit(event, data) {\n    event.preventDefault();\n    this.auth.login(data);\n  }\n\n  changeFormValue(event) {\n    this.loginForm[event.target.name] = event.target.value;\n  }\n\n  statusMessageClasses() {\n    return {\n      \"status-message\": true,\n      \"text-danger\": true,\n      \"hidden\": this.statusMessage == \"\"\n    };\n  }\n\n}\n","<main>\n  <form>\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"email\" placeholder=\"E-mail\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\">\n    </div>\n\n    <div class=\"input-group input-group-lg form-center\">\n      <button (click)=\"onFormSubmit($event, loginForm)\" class=\"btn btn-lg btn-secondary\">Login</button>\n    </div>\n\n    <div [ngClass]=\"statusMessageClasses()\">\n      {{ statusMessage }}\n    </div>\n\n    <div class=\"form-center\">\n      <a href=\"register\">Or register</a>\n    </div>\n  </form>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loginForm = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    passwordRepeat: ''\n  };\n\n  statusMessage;\n\n  _errorSubscription;\n\n  constructor(private auth:AuthenticationService) { }\n\n  ngOnInit(): void {\n    this._errorSubscription = this.auth.errors.subscribe((data) => {\n      this.statusMessage = data;\n    });\n    this.statusMessage = \"\";\n  }\n\n  ngOnDestroy() {\n     this._errorSubscription.unsubscribe();\n   }\n\n  onFormSubmit(event, data) {\n    event.preventDefault();\n    if(data.passwordRepeat == data.password) {\n      this.auth.register(data);\n    } else {\n      this.statusMessage = \"Passwords don't match!\";\n    }\n  }\n\n  changeFormValue(event) {\n    this.loginForm[event.target.name] = event.target.value;\n  }\n\n  statusMessageClasses() {\n    return {\n      \"status-message\": true,\n      \"text-danger\": true,\n      \"hidden\": this.statusMessage == \"\"\n    };\n  }\n\n}\n","<main>\n  <form>\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"firstname\" placeholder=\"Firstname\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"lastname\" placeholder=\"Lastname\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Username\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"text\" name=\"email\" placeholder=\"E-mail\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\">\n    </div>\n\n    <div class=\"input-group input-group-lg\">\n      <input (change)=\"changeFormValue($event)\" class=\"form-control\" type=\"password\" name=\"passwordRepeat\" placeholder=\"Repeat password\">\n    </div>\n\n    <div class=\"input-group input-group-lg form-center\">\n      <button (click)=\"onFormSubmit($event, loginForm)\" class=\"btn btn-lg btn-secondary\">Register</button>\n    </div>\n\n    <div [ngClass]=\"statusMessageClasses()\">\n      {{ statusMessage }}\n    </div>\n\n    <div class=\"form-center\">\n      <a href=\"login\">Or login</a>\n    </div>\n  </form>\n</main>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  token:string;\n\n  baseUrl:string = \"https://noahk.ddns.net/Websites/chatapp/api/\";\n\n  errors: Subject<string> = new Subject<string>();\n\n  constructor(private http:HttpClient, private router:Router) { }\n\n  login(data) {\n    this.http.post(this.baseUrl + \"login.php\", data).subscribe((response:any) => {\n      if(response.status !== \"success\") {\n        this.errors.next(response.message);\n      } else {\n        sessionStorage.setItem('userToken', response.token);\n        sessionStorage.setItem('websocketUrl', response.websocket);\n        this.router.navigate(['chat']);\n      }\n    });\n  }\n\n  register(data) {\n    this.http.post(this.baseUrl + \"register.php\", data).subscribe((response:any) => {\n      if(response.status !== \"success\") {\n        this.errors.next(response.message);\n      } else {\n        this.login({\n          email: data.email,\n          password: data.password\n        });\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\nimport { Message } from '../models/message';\nimport { Chat } from '../models/chat';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  socket:WebSocketSubject<any>;\n  callbacks:Map<number, (data) => void> = new Map<number, (data) => void>();\n  messages: Message[];\n  chats: Chat[];\n  members: any[];\n  showMembers: boolean;\n  selectedChat: number;\n  chatName: string;\n  errors: Subject<string> = new Subject<string>();\n\n  constructor(private router:Router) {\n    if(sessionStorage.getItem(\"userToken\") === null || sessionStorage.getItem(\"websocketUrl\") === null) {\n      this.router.navigate(['login']);\n    }\n    this.messages = [];\n    this.chats = [];\n    this.members = [];\n    this.showMembers = false;\n    this.selectedChat = -1;\n    this.chatName = \"\";\n  }\n\n  setupSocket() {\n    this.socket = webSocket(sessionStorage.getItem(\"websocketUrl\"));\n    this.socket.subscribe({\n      next: (msg) => {\n        switch(msg.type) {\n          case 'response':\n            // Responses may have callbacks.\n            if(msg.hasOwnProperty('identifier') && this.callbacks.has(msg.identifier)) {\n              this.callbacks.get(msg.identifier)(msg);\n              this.callbacks.delete(msg.identifier);\n            }\n            break;\n          case 'message':\n            if(msg.chat == this.selectedChat) {\n              this.messages.push(msg);\n              console.log(msg);\n            }\n            break;\n          default:\n            break;\n        }\n        console.log(msg);\n      },\n      error: (err) => {\n        this.router.navigate(['login']);\n      },\n      complete: () => {\n        this.errors.next(\"Disconnected!\");\n        console.log(\"Connection closed!\");\n      }\n    });\n  }\n\n  authenticate() {\n    if(sessionStorage.getItem(\"userToken\") === null || sessionStorage.getItem(\"websocketUrl\") === null) {\n      this.router.navigate(['login']);\n    }\n    this.socket.next({\n      type: \"authenticate\",\n      token: sessionStorage.getItem(\"userToken\")\n    });\n    sessionStorage.setItem(\"userToken\", null);\n  }\n\n  sendJson(obj, callback: (data) => void):void {\n    let callbackid = Math.floor(Math.random() * 1000000);\n    while(this.callbacks.has(callbackid)) {\n      callbackid = Math.floor(Math.random() * 1000000);\n    }\n    this.callbacks.set(callbackid, callback);\n    obj.identifier = callbackid;\n    \n    this.socket.next(obj);\n  }\n\n  leaveChat() {\n    this.sendJson({\n      type: \"leaveChat\",\n      chatid: this.selectedChat\n    }, (data) => {\n      if(data.status == \"error\") {\n        this.onError(data);\n      }\n    });\n    this.selectedChat = -1;\n    this.chatName = \"\";\n    this.refreshChats();\n    this.showMembers = false;\n    this.messages = [];\n  }\n\n  joinChat(chatid) {\n    this.selectedChat = chatid;\n    this.chatName = this.chats[chatid].name;\n    this.sendJson({\n      type: \"joinChat\",\n      chatid: this.selectedChat\n    }, (data) => {\n      if(data.status == \"error\") {\n        this.onError(data);\n      }\n    });\n    this.refreshChats();\n  }\n\n  sendMessage(msg:string) {\n    if(msg != \"\" && this.selectedChat != -1) {\n      this.sendJson({\n        type: \"sendMessage\",\n        chatid: this.selectedChat,\n        message: msg\n      }, (data) => {\n        if(data.status == \"error\") {\n          this.onError(data);\n        }\n      });\n    }\n  }\n\n  refreshChats(callback: () => void = () => {}):void {\n    this.sendJson({\n      type: \"getChats\",\n      name: name\n    }, (data) => {\n      if(data.status == \"success\") {\n        this.chats = data.chats;\n        callback();\n        if(this.selectedChat != -1) {\n          this.members = this.chats[this.selectedChat].users;\n        }\n        console.log(this.members);\n      } else {\n        this.onError(data);\n      }\n    });\n  }\n\n  createChat(name:string) {\n    this.sendJson({\n      type: \"createChat\",\n      name: name\n    }, (data) => {\n      if(data.status == \"success\") {\n        this.selectedChat = data.chatid;\n        this.refreshChats(() => {\n          this.chatName = this.chats[data.chatid].name;\n        });\n      } else {\n        this.onError(data);\n      }\n    });\n  }\n\n  onError(data) {\n    if(data.error == \"Unauthenticated!\") {\n      this.router.navigate(['login']);\n    }\n    this.errors.next(data.error);\n    console.log(data);\n  }\n\n  isInChat():boolean {\n    return this.selectedChat != -1;\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}